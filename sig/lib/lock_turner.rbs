class LockTurner
  attr_reader start: LockState
  attr_reader stop: LockState
  attr_reader forbidden_states: Array[LockState]

  def initialize: (Array[Integer] start, Array[Integer] stop, Array[Array[Integer]] forbidden) -> void

  def solve: () -> Array[Array[Integer]]
  
  private
  def map_states_graph: () -> Hash[LockState, LockState]
  def process_neighbours: (
      untyped queue, Hash[LockState, LockState] states_graph, 
      Hash[LockState, Integer] costs, LockState current
    )  -> void
  def find_path: (Hash[LockState, LockState] states_graph) -> Array[LockState]
end
